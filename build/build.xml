<?xml version="1.0" encoding="utf-8"?>
<project default="all" basedir=".">

    <!-- release variables -->
    <property name="VERSION" value="1.0.0" description="Version"/>

    <!-- paths -->
    <property name="TERRIFIC_DIR" value="../src/core/" description="Terrific Source Folder"/>
    <property name="TMP_DIR" value="tmp" description="Folder for temporary files"/>
    <property name="BUILD_DIR" value="build" description="Files for parsing etc."/>
    <property name="JS_JAR" value="js.jar" description="Rhino JS Engine"/>
    <property name="RELEASE_DIR" value="../release" description="Folder for release files"/>
    <property name="DOCUMENTATION_DIR" value="../release/docs" description="Folder for the API documentation"/>

    <!-- file names -->
    <property name="JS" value="terrific-${VERSION}.js"/>
    <property name="JS_MIN" value="terrific-${VERSION}.min.js"/>

    <!-- terrific js (full version) -->
    <target name="fulljs" description="Main build, concatenates source files and replaces @VERSION">
        <echo message="Building ${JS}"/>
        <mkdir dir="${TMP_DIR}"/>
        <mkdir dir="${TMP_DIR}/js"/>
        <concat fixlastline="yes" destfile="${TMP_DIR}/js/${JS}" encoding="UTF-8">
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="oo.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Config.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Application.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Sandbox.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Module.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Connector.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Utils.js"/>
            <fileset dir="${TERRIFIC_DIR}" includes="Tc.Utils.String.js"/>
        </concat>
        <java jar="${JS_JAR}" fork="true">
            <arg value="${BUILD_DIR}/replacement.js"/>
            <arg value="${TMP_DIR}/js/${JS}"/>
            <arg value="${VERSION}"/>
        </java>
        <echo message="${JS} built."/>
    </target>

    <!-- yui doc  -->
    <target name="yuidoc" description="Generates the javascript YUI documentation from the sources">
        <echo message="Building YUI documentation"/>
        <mkdir dir="${RELEASE_DIR}"/>
        <mkdir dir="${DOCUMENTATION_DIR}"/>
        <mkdir dir="${TMP_DIR}/output"/>
        <exec executable="yuidoc/bin/yuidoc.py">
            <arg line="${TMP_DIR}/js"/>
            <arg line="-p ${TMP_DIR}/output"/>
            <arg line="-o ${DOCUMENTATION_DIR}"/>
            <arg line="-t yuidoc/template"/>
            <arg line="-v ${VERSION}"/>
            <arg line="-m 'Terrific JavaScript Framework'"/>
            <arg line="-u 'http://www.terrifically.org'"/>
            <arg line="-Y 2"/>
        </exec>
        <echo message="YUI documentation built."/>
    </target>

    <!-- release -->
    <target name="clean">
        <delete dir="${TMP_DIR}"/>
        <delete dir="${RELEASE_DIR}"/>
    </target>

    <!-- terrific js (minified version) -->
    <target name="minjs" description="Minifies the main build by using UglifyJS">
        <move file="${TMP_DIR}/js/${JS}" tofile="${RELEASE_DIR}/${JS}"/>
        <delete dir="${TMP_DIR}"/>
        <exec executable="uglifyjs">
            <arg line="-o ${RELEASE_DIR}/${JS_MIN}"/>
            <arg line="${RELEASE_DIR}/${JS}"/>
        </exec>
        <echo message="${JS_MIN} built."/>
    </target>

    <target name="all" depends="clean,fulljs,yuidoc,minjs">
        <echo message="Build complete."/>
    </target>

</project>
